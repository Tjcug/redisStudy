<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
       xmlns:tx="http://www.springframework.org/schema/tx" xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="
	http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
	http://www.springframework.org/schema/mvc   http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
    http://www.springframework.org/schema/context  http://www.springframework.org/schema/context/spring-context-2.5.xsd " >

    <!--配置SpringMVC-->
    <!--1.开启spring注解模式-->
    <!--简化配置：
        (1)自动注册DefautlAnnotationHandlerMapping，AnationMethodHandlerAdapter
        (2)提供一系列:数据绑定，json,数字和日期支持，format，@NumberFormat,@DateTimeFormat
        -->
    <!--.扫描相关的Bean包-->
    <context:component-scan base-package="com.basic"/>

    <!--Springboot 和Hibernate整合-->
    <bean id="dataSource"
          class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="${driverClassName}">
        </property>
        <property name="url" value="${url}">
        </property>
        <property name="username" value="${username}">
        </property>
        <property name="password" value="${password}">
        </property>
    </bean>

    <bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">

        <property name="mappingLocations">
            <list>
                <!--<value>classpath:hibernateconf/Administrator.hbm.xml</value>-->
                <!--<value>classpath:hibernateconf/TTuplecount.hbm.xml</value>-->
                <!--<value>classpath:hibernateconf/TTuplelatency.hbm.xml</value>-->
                <!--<value>classpath:hibernateconf/TSpouttuplecount.hbm.xml</value>-->
                <!--<value>classpath:hibernateconf/TWordcount.hbm.xml</value>-->
                <!--<value>classpath:hibernateconf/THdfsbytecount.hbm.xml</value>-->
            </list>
        </property>

        <property name="configLocation" value="classpath:hibernate.cfg.xml">

        </property>
        <property name="dataSource" ref="dataSource">
        </property>

    </bean>

    <!--配置事务管理器-->
    <bean id="transactionManager"
          class="org.springframework.orm.hibernate4.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>
    <aop:aspectj-autoproxy proxy-target-class="true"></aop:aspectj-autoproxy>

    <tx:annotation-driven transaction-manager="transactionManager" />


    <!-- 加载配置文件，支持注解的方法 -->
    <bean id="prop" class="org.springframework.beans.factory.config.PropertiesFactoryBean">
        <property name="locations">
            <array>
            </array>
        </property>
    </bean>

    <!-- 加载配置文件，支持xml的方式-->
    <bean class="org.springframework.beans.factory.config.PreferencesPlaceholderConfigurer">
        <property name="locations">
            <array>
                <value>classpath:conn.properties</value>
            </array>
        </property>
    </bean>

    <!--&lt;!&ndash;定义Spring拦截器&ndash;&gt;-->
    <!--<mvc:interceptors>-->
        <!--&lt;!&ndash; 使用bean定义一个Interceptor，直接定义在mvc:interceptors根下面的Interceptor将拦截所有的请求 &ndash;&gt;-->
        <!--&lt;!&ndash;<bean class="com.host.app.web.interceptor.AllInterceptor"/>&ndash;&gt;-->
        <!--<mvc:interceptor>-->
            <!--<mvc:mapping path="/manage*/**"/>-->
            <!--&lt;!&ndash; 定义在mvc:interceptor下面的表示是对特定的请求才进行拦截的 &ndash;&gt;-->
            <!--<bean class="com.basic.bigdata.interceptor.AdminSecurityInterceptor"/>-->
        <!--</mvc:interceptor>-->
    <!--</mvc:interceptors>-->

    <!--Jedis-->
    <bean id="jedis" class="redis.clients.jedis.Jedis">
        <constructor-arg name="host" value="192.168.223.202"/>
        <constructor-arg name="port" value="6379"/>
    </bean>

</beans>
